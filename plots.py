import os

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

project_root = os.path.abspath(os.path.join(os.path.dirname(__file__)))
bench_path = os.path.join(project_root, 'plots')

data = pd.read_csv('results.csv')

sns.set_style("whitegrid")
plt.figure(figsize=(12, 8))

plt.figure(figsize=(14, 8))
sns.barplot(x='benchmark', y='avg_time_sec', hue='alg', data=data)
# plt.yscale('log')
plt.title('Execution Time by Benchmark and Algorithm (seconds)')
plt.xlabel('Benchmark ID')
plt.ylabel('Time (seconds)')
plt.xticks(rotation=90)
plt.legend(title='Algorithm', bbox_to_anchor=(1.05, 1), loc='upper left')
plt.tight_layout()
plt.savefig(os.path.join(bench_path, 'execution_time.png'), dpi=300, bbox_inches='tight')
plt.close()

plt.figure(figsize=(14, 8))
sns.barplot(x='benchmark', y='best_total_cost', hue='alg', data=data)
# plt.yscale('log')
plt.title('F value by Benchmark and Algorithm')
plt.xlabel('Benchmark ID')
plt.ylabel('Cost')
plt.xticks(rotation=90)
plt.legend(title='Algorithm', bbox_to_anchor=(1.05, 1), loc='upper left')
plt.tight_layout()
plt.savefig(os.path.join(bench_path, 'costs.png'), dpi=300, bbox_inches='tight')
plt.close()

plt.figure(figsize=(14, 8))
sns.barplot(x='benchmark', y='best_total_cost', hue='alg', data=data)
# plt.yscale('log')
plt.title('F value by Benchmark and Algorithm')
plt.xlabel('Benchmark ID')
plt.ylabel('Cost')
plt.xticks(rotation=90)
plt.legend(title='Algorithm', bbox_to_anchor=(1.05, 1), loc='upper left')
plt.tight_layout()
plt.savefig(os.path.join(bench_path, 'costs.png'), dpi=300, bbox_inches='tight')
plt.close()

plt.figure(figsize=(14, 8))
ax = plt.subplots()
ax = sns.barplot(x="benchmark", y="best_total_cost", hue='alg', data=data, palette='dark')
ax = sns.barplot(x="benchmark", y="optimal_value", data=data, color='blue')
ax.set(xlabel="x-axis", ylabel="y-axis")
plt.xticks(fontsize=5, rotation=90)
plt.yticks(fontsize=5)
plt.title('Distribution of Differences Between Algorithm Solutions and Optimal Values')
plt.xlabel('Benchmarks')
plt.ylabel('Costs')
plt.legend(title='Algorithm', bbox_to_anchor=(1.05, 1), loc='upper left')
plt.savefig(os.path.join(bench_path, 'all_diff.png'), dpi=300, bbox_inches='tight')
plt.close()

plt.figure(figsize=(14, 8))
sns.barplot(x="benchmark", y="diff", edgecolor='black', hue='alg', data=data)
mean_diff = data['diff'].mean()
plt.axhline(mean_diff, color='red', linestyle='dashed', linewidth=1,
            label=f'Mean Difference: {mean_diff:.1f}')
plt.xticks(rotation=90)
plt.title('Distribution of Differences Between Algorithm Solutions and Optimal Values')
plt.xlabel('Benchmarks')
plt.ylabel('Difference')
plt.legend(title='Algorithm', bbox_to_anchor=(1.05, 1), loc='upper left')
plt.savefig(os.path.join(bench_path, 'diff.png'), dpi=300, bbox_inches='tight')
plt.close()

plt.figure(figsize=(14, 8))
sns.barplot(x="benchmark", y="percent_diff", edgecolor='black', hue='alg', data=data)
mean_diff = data['percent_diff'].mean()
plt.axhline(mean_diff, color='red', linestyle='dashed', linewidth=1,
            label=f'Mean Difference: {mean_diff:.1f}')
plt.xticks(rotation=90)
plt.title('Distribution of Differences Between Algorithm Solutions and Optimal Values')
plt.xlabel('Benchmarks')
plt.ylabel('Difference')
plt.legend(title='Legend', bbox_to_anchor=(1.05, 1), loc='upper left')
plt.savefig(os.path.join(bench_path, 'percent_diff.png'), dpi=300, bbox_inches='tight')
plt.close()
